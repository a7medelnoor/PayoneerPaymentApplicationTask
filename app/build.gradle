plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.a7medelnoor.payoneerpaymentapplicationtask"
        minSdkVersion 17
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Retrofit Implementation
    implementation "com.google.code.gson:gson:$retrofitGsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitGsonConvertor"

    // Multidex version
    implementation "androidx.multidex:multidex:$multidex_version"

    // Ok Http Login Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$httpLoginIntercepter"

    // Glide & Picasso Image Libraries
    implementation "com.github.bumptech.glide:glide:$glideImageLibrary"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideImageLibrary"
    implementation "com.squareup.picasso:picasso:$picassoImageLibVersion"

    //  Rxjava for networking
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava3:rxandroid:$rxAndroidAndAdapterVersion"
     implementation "com.github.akarnokd:rxjava3-retrofit-adapter:$googleTruthVersion"



    //lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataAndViewModelLifeCycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$liveDataAndViewModelLifeCycle"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"

    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "android.arch.lifecycle:extensions:$viewModelLifeCycle"
    implementation "android.arch.lifecycle:viewmodel:$viewModelLifeCycle"
     // mockito
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"

    testImplementation "com.google.truth:truth:$googleTruthVersion"

    testImplementation "androidx.arch.core:core-testing:$coreTesting"
    //
    testImplementation "com.jraska.livedata:testing:$liveDataTestingLib"



}